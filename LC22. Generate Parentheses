class Solution {
    public List<String> generateParenthesis(int n) {
        List<String> res = new ArrayList<String>();
        if(n <= 0){
            return res;
        }
        
        char[] cur = new char[n * 2];
        helper(res, n, n, 0, cur);
        return res;
    }
    
    private void helper(List<String> res, int left, int right,int index, char[] cur){
        if(left == 0 && right == 0){
            res.add(new String(cur));
            return;
        }
        
        
        if(left > 0){
            cur[index] = '(';
            helper(res, left - 1,  right, index + 1, cur);
        }
        
        if(right > left){
            cur[index] = ')';
            helper(res, left, right - 1, index + 1, cur);
        }
    }
}
